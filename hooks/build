#!/bin/bash -x

for DOCKERFILE_PATH in $(ls Dockerfile*); do

  # postcheckout
  BUILD_ARCH=$(echo "${DOCKERFILE_PATH}" | cut -d '.' -f 2)

  if [ "${BUILD_ARCH}" != "Dockerfile" ];then 
    QEMU_USER_STATIC_ARCH=$([ "${BUILD_ARCH}" == "armhf" ] && echo "${BUILD_ARCH::-2}" || echo "${BUILD_ARCH}")
    QEMU_USER_STATIC_DOWNLOAD_URL="https://github.com/multiarch/qemu-user-static/releases/download"
    QEMU_USER_STATIC_LATEST_TAG=$(curl -s https://api.github.com/repos/multiarch/qemu-user-static/tags \
        | grep 'name.*v[0-9]' \
        | head -n 1 \
        | cut -d '"' -f 4)

    curl -SL "${QEMU_USER_STATIC_DOWNLOAD_URL}/${QEMU_USER_STATIC_LATEST_TAG}/x86_64_qemu-${QEMU_USER_STATIC_ARCH}-static.tar.gz" \
        | tar xzv

    # prebuild

    docker run --rm --privileged multiarch/qemu-user-static:register --reset

    QEMU_USER_STATIC_ARCH=$([ "${BUILD_ARCH}" == "armhf" ] && echo "${BUILD_ARCH::-2}" || echo "${BUILD_ARCH}")
  else
    echo 'qemu-user-static: Download not required for current arch'
  fi
  

  # build

  docker build \
      --file "${DOCKERFILE_PATH}" \
      --build-arg BUILD_DATE="$(date -u +"%Y-%m-%dT%H:%M:%SZ")" \
      --build-arg VCS_REF="$(git rev-parse --short HEAD)" \
      --build-arg QEMU_USER_STATIC_ARCH="${QEMU_USER_STATIC_ARCH}" \
      --tag "${IMAGE_NAME}" \
      .

  docker create --rm --name "test-${DOCKER_TAG}"  "${IMAGE_NAME}" && {
      docker cp "test-${DOCKER_TAG}":/usr/bin/qemu-${QEMU_USER_STATIC_ARCH}-static - >/dev/null && {
          echo "qemu binary found in image while it should not"
          docker rm "test-${DOCKER_TAG}"
          exit 1
      } 
  } || docker rm "test-${DOCKER_TAG}" || true

done
